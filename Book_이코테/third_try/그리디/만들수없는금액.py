# test case

# Q:
# 5
# 3 2 1 1 9

# A:
# 8

# Q:
# 3
# 3 5 7
# A:
# 1

# Description

# 우리는 어느 동전까지 만들 수 있는 지 알아야 한다. 이를 타겟이라고 하자.
# 
# 당연히 처음 만들어야 하는 코인 값은 1원이 되겠다. 타겟은 1이다.

# 처음에 우리가 조합할 수 있는 코인은 아무것도 없으므로 무조건 제일 작은 수를 선택해야한다. 따라서 처음의 수는 1원이여야한다.

# 1원을 선택했다고 하자. 그러면 자연스럽게 우리는 2원을 만들어야 되는 것을 알고있다.
# 
# 이를 표현하자면 조합을 해서 만들어야하는 수와 선택한 수의 합이 2원이 된 것이다.
# 0원: 선택 X
# 1원: 1 선택
# 타겟: 1원 + 1원이 된다.
# 정확하게 이유를 말하자면 우리는 0원까지 만들 수 있었고 1원을 만들어야 했다. 따라서 이전에 만들 수 없었던 수 + 선택한 수가 다음 타겟이 된다.

# 이 규칙을 계속 적용해서 2원을 만들 수 있으려면 0 또는 1에 선택한 수를 더해서 2원이 되면 된다. 따라서 2원이 되기 위해 선택해야 하는 수의 최댓값은 2원이 된다. 결국 타겟보다 큰 수가 나오면 만들 수 없게 된다.

# 이 규칙을 계속 적용해서 타겟을 올려가며 문제를 풀면 된다.

import sys

input = sys.stdin.readline

n = int(input())
coins = list(map(int, input().rstrip().split()))

coins.sort()

target = 1

for c in coins :
	if target < c :
		break
	target += c

print(target)